@inject SignInManager<APS_Project.Models.AppUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) menu-button shadow" id="profile" asp-page="./Index"><i class="fa fa-user-circle" style="padding-right:10px"></i>Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext) menu-button shadow" id="email" asp-page="./Email"><i class="fa fa-envelope-square" style="padding-right:10px"></i>Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) menu-button shadow" id="change-password" asp-page="./ChangePassword"><i class="fa fa-key" style="padding-right:10px"></i>Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext) menu-button shadow mbutton" id="personal-data" asp-page="./PersonalData"><i class="fa fa-id-card" style="padding-right:10px"></i>Personal data</a></li>
</ul>
